@charset "UTF-8";
/*! normalize.css v5.0.0 | MIT License | github.com/necolas/normalize.css */@import "https://fonts.googleapis.com/css?family=EB+Garamond|Oswald:400,700";html{font-family:sans-serif;line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,footer,header,nav,section{display:block}h1{font-size:2em;margin:.67em 0}figcaption,figure,main{display:block}figure{margin:1em 40px}hr{-webkit-box-sizing:content-box;box-sizing:content-box;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:rgba(0,0,0,0);-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}audio,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{-webkit-box-sizing:border-box;box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details,menu{display:block}summary{display:list-item}canvas{display:inline-block}[hidden],template{display:none}html{-webkit-box-sizing:border-box;box-sizing:border-box;color:#222;font-size:1em}*,:after,:before{-webkit-box-sizing:inherit;box-sizing:inherit}::-moz-selection{background:#b3d4fc;text-shadow:none}::selection{background:#b3d4fc;text-shadow:none}hr{display:block;height:1px;border-top:1px solid #ccc;margin:1em 0;padding:0}audio,canvas,iframe,img,svg,video{vertical-align:middle}fieldset{border:0;margin:0;padding:0}textarea{resize:vertical}.browserupgrade{margin:.2em 0;background:#ccc;color:#000;padding:.2em 0}@-webkit-keyframes wiggle{0%{-webkit-transform:translate(0) rotate(-12deg);transform:translate(0) rotate(-12deg);text-shadow:10px 10px 3px rgba(0,0,0,.1)}65%{-webkit-transform:translateY(15px) rotate(12deg) scale(1.3);transform:translateY(15px) rotate(12deg) scale(1.3);text-shadow:-10px -10px 3px rgba(0,0,0,.1)}to{-webkit-transform:translate(0) rotate(-12deg);transform:translate(0) rotate(-12deg);text-shadow:10px 10px 3px rgba(0,0,0,.1)}}@keyframes wiggle{0%{-webkit-transform:translate(0) rotate(-12deg);transform:translate(0) rotate(-12deg);text-shadow:10px 10px 3px rgba(0,0,0,.1)}65%{-webkit-transform:translateY(15px) rotate(12deg) scale(1.3);transform:translateY(15px) rotate(12deg) scale(1.3);text-shadow:-10px -10px 3px rgba(0,0,0,.1)}to{-webkit-transform:translate(0) rotate(-12deg);transform:translate(0) rotate(-12deg);text-shadow:10px 10px 3px rgba(0,0,0,.1)}}body{min-height:100vh;background-image:-o-repeating-linear-gradient(55deg,rgba(231,131,177,0) 0,#40ccde 33vmax,#40ccde calc(33vmax - 5px),#40ccde 33vmax),-o-repeating-linear-gradient(188deg,rgba(231,131,177,0) 0,#9959cf 65vmax,#9959cf calc(65vmax - 5px),#9959cf 65vmax);background-image:repeating-linear-gradient(35deg,rgba(231,131,177,0),#40ccde 33vmax,#40ccde calc(33vmax - 5px),#40ccde 33vmax),repeating-linear-gradient(262deg,rgba(231,131,177,0),#9959cf 65vmax,#9959cf calc(65vmax - 5px),#9959cf 65vmax);background-color:#e783b1;background-size:100% 100%;font-family:EB Garamond,Times New Roman,Times,serif;font-size:1.5rem;color:#020202}h1,h2{font-family:Oswald,Helvetica,sans-serif}h2{letter-spacing:3px}h3{font-family:Oswald,Helvetica,sans-serif}a{color:#fff}.jumbotron{background-color:#fff;background:url(/img/wavy-dots.png) repeat}.jumbotron p{font-size:1.2em}ul li{font-size:1.5rem}hr{border:0;height:0;-webkit-box-shadow:0 0 10px 1px #000;box-shadow:0 0 10px 1px #000}hr:after{content:"\00a0"}.navbar{border-radius:5px;font-family:Oswald,Helvetica,sans-serif;letter-spacing:2px}.navbar a{font-size:24px}.mm_header h1{-webkit-transition:all .2s;-o-transition:all .2s;transition:all .2s;font-size:8vmin}.mm_header h1:hover{-webkit-transform:scale(1.3) rotateX(-20deg) rotateY(10deg);transform:scale(1.3) rotateX(-20deg) rotateY(10deg)}.mm_header h1:hover span{display:inline-block;-webkit-animation:wiggle .4s ease-in-out infinite;animation:wiggle .4s ease-in-out infinite}.mm_header h1:hover span:nth-child(2n){-webkit-animation-delay:.15s;animation-delay:.15s}#profile-img{width:400px;max-width:60%;height:auto;border-radius:50%}.content-styles{background-color:#fff;border-radius:5px}.content-styles h2{font-size:1.5em;color:#020202;text-shadow:#858585 2px 2px 4px;margin-bottom:2rem}.content-styles h4{letter-spacing:5px;font-size:2rem}.content-styles ul{list-style:none}.content-styles ul li:before{content:"â€¢";color:#9959cf;display:inline-block;width:1em;margin-left:-1em}.content-styles a{background:-webkit-gradient(linear,left top,right top,from(#40ccde),to(#9959cf));background:-o-linear-gradient(left,#40ccde,#9959cf);background:linear-gradient(90deg,#40ccde,#9959cf);-webkit-background-clip:text;-webkit-text-fill-color:rgba(0,0,0,0);-webkit-box-decoration-break:clone;box-decoration-break:clone;font-weight:700;border-bottom:1px solid #40ccde!important;padding-bottom:.05rem}#about-me .container{background:url(/img/stacked_circles.png) repeat}#canvas{display:block;position:absolute;z-index:1;pointer-events:none;height:100%;width:100%}.connect-li a{border:none!important;background:none;padding:0}.li-logo{display:inline-block;width:32px;height:32px;vertical-align:baseline;margin-left:5px}#dev-portfolio .container{background:url(/img/wavy-dots.png) repeat}#writing-portfolio .container{background:url(/img/stacked_circles.png) repeat}.publications h3{text-align:center}.poem-list{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-wrap:wrap;flex-wrap:wrap}.poem-list .poem{width:32%}.publisher{font-style:italic;font-size:18px}@media (max-width:600px){.poem-list{display:block}.poem-list .poem{width:100%;margin:0 0 10px}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
