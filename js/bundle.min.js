"use strict";!function(){var t=document.getElementById("confetti"),o=!1,e=document.getElementById("canvas"),n=e.getContext("2d"),r=window.innerWidth,i=window.innerHeight;e.width=r,e.height=i;for(var a=900,c=[],h=0;h<a;h++)c.push({x:Math.random()*r,y:Math.random()*i,r:18*Math.random()+1,d:Math.random()*a,color:"rgba(".concat(Math.floor(255*Math.random()),", ").concat(Math.floor(255*Math.random()),", ").concat(Math.floor(255*Math.random()),", 0.8)"),tilt:Math.floor(5*Math.random())-5});function d(){n.clearRect(0,0,r,i);for(var t=0;t<a;t++){var o=c[t];n.beginPath(),n.lineWidth=o.r,n.strokeStyle=o.color,n.moveTo(o.x,o.y),n.lineTo(o.x+o.tilt+o.r/2,o.y+o.tilt),n.stroke()}!function(){l+=.01;for(var t=0;t<a;t++){var o=c[t];o.y+=Math.cos(l+o.d)+1+o.r/2,o.x+=2*Math.sin(l),(o.x>r+5||o.x<-5||o.y>i)&&t%3>0&&(c[t]={x:Math.random()*r,y:-10,r:o.r,d:o.d,color:o.color,tilt:o.tilt})}}()}var l=0;t.addEventListener("click",(function(){!1===o&&(setInterval((function(){d()}),20),o=!0)}))}();var win=null;function NewWindow(t,o,e,n,r,i){"999"!=GetCookie("sid")&&(document.cookie="sid=999; Path=/; Expires= "+getFuture(20),"random"==r&&(myleft=screen.width?Math.floor(Math.random()*(screen.width-e)):100,mytop=screen.height?Math.floor(Math.random()*(screen.height-n-75)):100),"center"==r?(myleft=screen.width?(screen.width-e)/2:100,mytop=screen.height?(screen.height-n)/2:100):("center"!=r&&"random"!=r||null==r)&&(myleft=0,mytop=20),settings="width="+e+",height="+n+",top="+mytop+",left="+myleft+",scrollbars=no,location=no,directories=no,status=no,menubar=no,toolbar=no,resizable=no",(win=window.open(t,o,settings)).focus())}function getFuture(t){var o=new Date;return o.setTime(o.getTime()+864e5*t),o}function GetCookie(t){for(var o=t+"=",e=o.length,n=document.cookie.length,r=0;r<n;){var i=r+e;if(document.cookie.substring(r,i)==o)return getCookieVal(i);if(0==(r=document.cookie.indexOf(" ",r)+1))break}return null}function getCookieVal(t){var o=document.cookie.indexOf(";",t);return-1==o&&(o=document.cookie.length),unescape(document.cookie.substring(t,o))}window.onbeforeunload=function(){NewWindow("http://matthewmogavero.site","mypopup","640","480","center","front")},$(document).ready((function(){$("a").on("click",(function(t){if(""!==this.hash){t.preventDefault();var o=this.hash;$("html, body").animate({scrollTop:$(o).offset().top},800,(function(){window.location.hash=o}))}}))})),function(){var t=document.getElementById("urlMoons"),o=["ðŸŒ‘","ðŸŒ˜","ðŸŒ—","ðŸŒ–","ðŸŒ•","ðŸŒ”","ðŸŒ“","ðŸŒ’"],e=[0,0,0,0,0,0,0,0,0,0],n=0,r=!1;function i(){var t="",r=0;if(n){for(;0==e[r];)r++;r>=e.length?n=0:(e[r]++,8==e[r]&&(e[r]=0))}else{for(;4==e[r];)r++;r>=e.length?n=1:e[r]++}e.forEach((function(e){t+=o[e]})),location.hash=t,setTimeout(i,50)}t.addEventListener("click",(function(){!1===r&&(i(),r=!0)}))}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
